{
  "select word": {
    "prefix": "s",
    "body": [
      "select ${0}"
    ],
    "description": "select"
  },
  "join with table": {
    "prefix": "j",
    "body": [
      "join ${1:table} as ${2:alias}"
    ]
  },
  "order by": {
    "prefix": "ob",
    "body": [
      "order by ${0}"
    ]
  },
  "group by": {
    "prefix": "gb",
    "body": [
      "group by ${0}"
    ]
  },
  "createt": {
    "prefix": "createt",
    "body": [
      "create table ${1:tablename} (",
      "\t${2:attribute(s)}",
      ");"
    ],
    "description": "create regular table"
  },
  "createti": {
    "prefix": "createti",
    "body": [
      "create table if not exists ${1:tablename} (",
      "\t${2:attribute(s)}",
      ");"
    ],
    "description": "create table with conditional"
  },
  "created": {
    "prefix": "created",
    "body": [
      "create database ${1:name};"
    ],
    "description": "create regular table"
  },
  "createdi": {
    "prefix": "createdi",
    "body": [
      "create database if not exists ${1:name};"
    ],
    "description": "create table with conditional"
  },
  "insert": {
    "prefix": "insert",
    "body": [
      "insert into ${1:tablename} (",
      "\t${2:attribute(s)}",
      ") values ( ${3:values} )"
    ],
    "description": "insert value(s)"
  },
  "dropt": {
    "prefix": "dropt",
    "body": [
      "drop table ${1:tablename};"
    ],
    "description": "drop table"
  },
  "dropd": {
    "prefix": "dropd",
    "body": [
      "drop database ${1:dbname};"
    ],
    "description": "drop database"
  },
  "dropti": {
    "prefix": "dropti",
    "body": [
      "drop table if exists ${1:tablename};"
    ],
    "description": "drop table with conditional"
  },
  "dropdi": {
    "prefix": "dropdi",
    "body": [
      "drop database if exists ${1:dbname};"
    ],
    "description": "drop database with conditional"
  },
  "showt": {
    "prefix": "showt",
    "body": [
      "show tables;"
    ],
    "description": "show tables"
  },
  "showd": {
    "prefix": "showd",
    "body": [
      "show databases;"
    ],
    "description": "show databases"
  },
  "select": {
    "prefix": "s",
    "body": [
      "select ${1:attribute(s)} from ${3:tablename} as ${2:alias};"
    ],
    "description": "regular select"
  },
  "selectd": {
    "prefix": "selectd",
    "body": [
      "select distinct ${1:attribute(s)}",
      "\tfrom ${2:tablename};"
    ],
    "description": "select distinct"
  },
  "selectw": {
    "prefix": "selectw",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\twhere ${3:condition};"
    ],
    "description": "select with condition"
  },
  "selector": {
    "prefix": "selector",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\torder by ${3:attribute(s)} ${4:asc|desc};"
    ],
    "description": "select with order"
  },
  "updatet": {
    "prefix": "updatet",
    "body": [
      "update ${1:tablename}",
      "\tset ${2:attribute(s)}",
      "\twhere ${3:condition};"
    ],
    "description": "update table"
  },
  "delete": {
    "prefix": "delete",
    "body": [
      "delete from ${1:tablename}",
      "\twhere ${3:condition};"
    ],
    "description": "delete records"
  },
  "altert": {
    "prefix": "altert",
    "body": [
      "alter table ${1:tablename}",
      "\t ${2:intructions};"
    ],
    "description": "alter table"
  },
  "alterad": {
    "prefix": "alterad",
    "body": [
      "alter table ${1:tablename}",
      "\tadd column ${2:col_name};"
    ],
    "description": "alter table - add column"
  },
  "alteraf": {
    "prefix": "alteraf",
    "body": [
      "alter table ${1:tablename}",
      "\tadd column ${2:col_name}",
      "\tafter ${5:col_name};"
    ],
    "description": "alter table - add column after"
  },
  "alterdb": {
    "prefix": "alterdb",
    "body": [
      "alter database ${1:dbname}",
      "\tcharacter set ${2:charset}",
      "\tcollate ${3:utf8_unicode_ci};"
    ],
    "description": "alter database"
  },
  "ijoin": {
    "prefix": "ijoin",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\tinner join ${3:tablename2}",
      "\ton ${4:match};"
    ],
    "description": "inner join"
  },
  "rjoin": {
    "prefix": "rjoin",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\tright join ${3:tablename2}",
      "\ton ${4:match};"
    ],
    "description": "right join"
  },
  "ljoin": {
    "prefix": "ljoin",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\tleft join ${3:tablename2}",
      "\ton ${4:match};"
    ],
    "description": "left join"
  },
  "fjoin": {
    "prefix": "fjoin",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\tfull join outer ${3:tablename2}",
      "\ton ${4:match}",
      "\twhere ${5:condition};"
    ],
    "description": "full join"
  },
  "union": {
    "prefix": "union",
    "body": [
      "select ${1:attribute(s)} from ${2:tablename}",
      "union",
      "select ${3:attribute(s)} from ${4:tablename2};"
    ],
    "description": "regular union"
  },
  "uniona": {
    "prefix": "uniona",
    "body": [
      "select ${1:attribute(s)} from ${2:tablename}",
      "union all",
      "select ${3:attribute(s)} from ${4:tablename2};"
    ],
    "description": "all union"
  },
  "groupb": {
    "prefix": "groupb",
    "body": [
      "select ${1:attribute(s)}",
      "\tfrom ${2:tablename}",
      "\torder by ${3:attribute(s)};"
    ],
    "description": "group by"
  },
  "bakupd": {
    "prefix": "bakupd",
    "body": [
      "backup database ${1:dbname}",
      "\tto disk ${2:filepath};"
    ],
    "description": "backup database"
  },
  "bakupdw": {
    "prefix": "bakupdw",
    "body": [
      "backup database ${1:dbname}",
      "\tto disk ${2:filepath}",
      "\twith ${3:diferential};"
    ],
    "description": "diferencial backup database"
  },
  "primaryk": {
    "prefix": "primaryk",
    "body": [
      "primary key(${1:attribute})"
    ],
    "description": "primary key"
  },
  "primarykc": {
    "prefix": "primarykc",
    "body": [
      "constraint ${1:attribute} primary key(${2:attribute(s)})"
    ],
    "description": "constraint rimary key"
  },
  "foreingk": {
    "prefix": "foreingk",
    "body": [
      "foreign key(${1:attribute}) references ${2:tablename}(${3:attribute})"
    ],
    "description": "foreing key"
  },
  "foreingkc": {
    "prefix": "foreingkc",
    "body": [
      "constraint ${1:attribute} foreing key (${2:attribute(s)})",
      "\treferences ${3:tablename}(${4:attribute})"
    ],
    "description": "constraint foreing key"
  },
  "check": {
    "prefix": "check",
    "body": [
      "check ( ${1:condition} )"
    ],
    "description": "check"
  },
  "creteuser": {
    "prefix": "createuser",
    "body": "create user '${1:username}'@'${2:localhost}' identified by '${3:password}';",
    "description": "create user"
  },
  "deleteuser": {
    "prefix": "deleteuser",
    "body": "delete from mysql.user where user = '${1:username}';",
    "description": "delete user"
  },
  "grantuser": {
    "prefix": "grantuser",
    "body": "grant all privileges on ${1:db}.${2:tb} to '${3:user_name}'@'${4:localhost}';",
    "description": "grant privileges"
  }
}
